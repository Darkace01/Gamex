# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 8.0.x
  SWASHBUCKLE_DOTNET_CORE_VERSION: 8.0.x
  API_IMPORT_SPECIFICATION_PATH: Gamex/publish/swagger.json
  API_IMPORT_DLL: Gamex/bin/Release/net8.0/Gamex.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: Gamex
  WEBAPP_PACKAGE_PATH: FinancialApplication/publish
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: '${{env.WORKING_DIRECTORY}}/appsettings.json'
      env:
        Cloudinary.CloudName: ${{ secrets.CLOUDINARY_CLOUDNAME }}
        Cloudinary.ApiKey: ${{ secrets.CLOUDINARY_APIKEY }}
        Cloudinary.ApiSecret: ${{ secrets.CLOUDINARY_APISECRET }}
        Cloudinary.Url: ${{ secrets.CLOUDINARY_URL }}
        Authentication.Google.ClientId: ${{ secrets.GOOGLE_CLIENTID }}
        Authentication.Google.ClientSecret: ${{ secrets.GOOGLE_CLIENT_SECRET }}
        Authentication.Google.MobileClientId: ${{ secrets.GOOGLE_MOBILE_CLIENTID }}
        ConnectionStrings.DefaultConnection: ${{ secrets.DB_CONNECTION }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
    - name: Restore
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}
    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore
    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build
    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.WEBAPP_PACKAGE_PATH }}
    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: webapp
        path: ${{ env.WEBAPP_PACKAGE_PATH }}
  deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
      
